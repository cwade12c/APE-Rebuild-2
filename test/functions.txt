---------------------Account Functions---------------------
f:typeHas(int $type, int $permission)
f:accountTypeHas(string $accountID, int $permission)
f:accountIsTemp(string $accountID)
f:accountIsStudent(string $accountID)
f:accountIsGrader(string $accountID)
f:accountIsTeacher(string $accountID)
f:accountIsAdmin(string $accountID)
f:setAccountType(string $accountID, int $type)
f:stripAccountType(string $accountID)
f:accountExists(string $accountID)
f:createAccount(string $accountID, int $type = ACCOUNT_TYPE_NONE, string $firstName = null, string $lastName = null, string $email = null
f:createTempStudent(string $firstName = null, string $lastName = null, string $email = null)
f:createStudent(string $id, string $firstName, string $lastName, string $email)
f:createGrader(string $id, string $firstName, string $lastName, string $email)
f:createTeacher(string $id, string $firstName, string $lastName, string $email)
f:createAdmin(string $id, string $firstName, string $lastName, string $email)
f:promoteTempToStudent(string $tempID, string $id)
f:combineStudent(string $tempID, string $id)
f:generateTempID()
f:validID(string $id)
f:validTempID(string $id)
f:getAllAccounts()
f:getAllAccountsByType(int $type)
f:getAllTemporaryStudents()
f:getAllStudents()
f:getAllGraders()
f:getAllTeachers()
f:getAllAdmins()
f:doesMinimumNumberOfAdminsExist()
---------------------Category Functions---------------------
f:createCategory(string $name, int $points)
f:deleteCategory(int $id)
f:updateCategory(int $id, string $name, int $points)
f:updateCategoryName(int $id, string $name)
f:updateCategoryPoints(int $id, int $points)
f:getCategoryInfo(int $id)
f:getCategories()
f:getDefaultCategories()
f:clearDefaultCategories()
f:addDefaultCategory(int $id)
f:removeDefaultCategory(int $id)
---Exam Functions---
f:getExamsAll(int $type = GET_EXAMS_TYPE_BOTH)
f:getExamsArchived(int $type = GET_EXAMS_TYPE_BOTH)
f:getExamsNonArchived(int $type = GET_EXAMS_TYPE_BOTH)
f:getExamsFinalizing(int $type = GET_EXAMS_TYPE_BOTH)
f:getExamsGrading(int $type = GET_EXAMS_TYPE_BOTH)
f:getExamsUpcoming(int $type = GET_EXAMS_TYPE_BOTH)
f:getExamsExtended(int $state, int $type)
f:getExamInformation(int $id)
f:getExamState(int $id)
f:getExamCategories(int $id)
f:getInClassExamTeacher(int $id)
f:setExamState(int $id, int $state)
---------------------Exam State Functions---------------------
f:doesExamStateAllowUpdates(int $state)
f:doesExamStateAllowRegistration(int $state)
f:doesExamStateAllowForcedRegistration(int $state)
f:isExamStateValid(int $state)
f:refreshExams()
f:refreshExam(int $id)
---------------------General Functions---------------------
f:validateDates(DateTime $start, DateTime $cutoff)
f:validateExamLength(int $length)
f:validateLocationID(int $id)
f:validateTeacherID(string $teacherID)
---Grading Functions---
f:assignGrader(int $graderId, int $examId, int $categoryId, $submitted)
f:removeGrader(int $graderId, int $examId, int $categoryId)
f:getGradersByExam(int $examId)
f:getGradersByCategory(int $categoryId)
f:getExamsAndCategoriesByGrader(int $graderId)
f:isAllGradesSubmitted(int $examId)
f:getSubmittedGraders(int $examId)
f:getUnsubmittedGraders(int $examId)
f:getNumberOfSubmittedGraders(int $examId)
f:getNumberOfUnsubmittedGraders(int $examId)
f:setExamToFinalizing(int $examId)
f:getStudentCategoryGradeConflicts(int $examId)
f:getCategoryGrades(int $categoryId)
f:getStudentAverageByCategory(int $studentId, int $categoryId)
f:getStudentGradesByExam(int $examId)
f:getStudentGrades(int $studentId)
f:passStudent(int $examId, int $studentId)
f:failStudent(int $examId, int $studentId)
f:gradeCategory(int $examId, int $categoryId, int $studentId, int $grade, string $comments)
---------------------Reports Functions---------------------
f:getReportIDs()
f:getReportSet()
f:getReportRows(int $id)
f:wipeReportRows(int $id)